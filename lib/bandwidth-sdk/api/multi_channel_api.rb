=begin
#Bandwidth

#Bandwidth's Communication APIs

The version of the OpenAPI document: 1.0.0
Contact: letstalk@bandwidth.com
Generated by: https://openapi-generator.tech
Generator version: 7.8.0

=end

require 'cgi'

module Bandwidth
  class MultiChannelApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Create Multi-Channel Message
    # Endpoint for sending Multi-Channel messages.
    # @param account_id [String] Your Bandwidth Account ID.
    # @param multi_channel_message_request [MultiChannelMessageRequest] 
    # @param [Hash] opts the optional parameters
    # @return [CreateMultiChannelMessageResponse]
    def create_multi_channel_message(account_id, multi_channel_message_request, opts = {})
      data, _status_code, _headers = create_multi_channel_message_with_http_info(account_id, multi_channel_message_request, opts)
      data
    end

    # Create Multi-Channel Message
    # Endpoint for sending Multi-Channel messages.
    # @param account_id [String] Your Bandwidth Account ID.
    # @param multi_channel_message_request [MultiChannelMessageRequest] 
    # @param [Hash] opts the optional parameters
    # @return [Array<(CreateMultiChannelMessageResponse, Integer, Hash)>] CreateMultiChannelMessageResponse data, response status code and response headers
    def create_multi_channel_message_with_http_info(account_id, multi_channel_message_request, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: MultiChannelApi.create_multi_channel_message ...'
      end
      # verify the required parameter 'account_id' is set
      if @api_client.config.client_side_validation && account_id.nil?
        fail ArgumentError, "Missing the required parameter 'account_id' when calling MultiChannelApi.create_multi_channel_message"
      end
      # verify the required parameter 'multi_channel_message_request' is set
      if @api_client.config.client_side_validation && multi_channel_message_request.nil?
        fail ArgumentError, "Missing the required parameter 'multi_channel_message_request' when calling MultiChannelApi.create_multi_channel_message"
      end
      # resource path
      local_var_path = '/users/{accountId}/messages/multiChannel'.sub('{' + 'accountId' + '}', CGI.escape(account_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
        header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(multi_channel_message_request)

      # return_type
      return_type = opts[:debug_return_type] || 'CreateMultiChannelMessageResponse'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['Basic']

      new_options = opts.merge(
        :operation => :"MultiChannelApi.create_multi_channel_message",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: MultiChannelApi#create_multi_channel_message\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
