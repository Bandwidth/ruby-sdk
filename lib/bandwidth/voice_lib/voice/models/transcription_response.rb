# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # TranscriptionResponse Model.
  class TranscriptionResponse < BaseModel
    # TODO: Write general description for this method
    # @return [List of Transcript]
    attr_accessor :transcripts

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['transcripts'] = 'transcripts'
      @_hash
    end

    def initialize(transcripts = nil)
      @transcripts = transcripts
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      # Parameter is an array, so we need to iterate through it
      transcripts = nil
      unless hash['transcripts'].nil?
        transcripts = []
        hash['transcripts'].each do |structure|
          transcripts << (Transcript.from_hash(structure) if structure)
        end
      end

      # Create object from extracted values.
      TranscriptionResponse.new(transcripts)
    end
  end
end
