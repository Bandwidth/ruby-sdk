# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # ModifyConferenceRequest Model.
  class ModifyConferenceRequest < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [StatusEnum]
    attr_accessor :status

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :redirect_url

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :redirect_fallback_url

    # TODO: Write general description for this method
    # @return [RedirectMethodEnum]
    attr_accessor :redirect_method

    # TODO: Write general description for this method
    # @return [RedirectFallbackMethodEnum]
    attr_accessor :redirect_fallback_method

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :username

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :password

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :fallback_username

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :fallback_password

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['status'] = 'status'
      @_hash['redirect_url'] = 'redirectUrl'
      @_hash['redirect_fallback_url'] = 'redirectFallbackUrl'
      @_hash['redirect_method'] = 'redirectMethod'
      @_hash['redirect_fallback_method'] = 'redirectFallbackMethod'
      @_hash['username'] = 'username'
      @_hash['password'] = 'password'
      @_hash['fallback_username'] = 'fallbackUsername'
      @_hash['fallback_password'] = 'fallbackPassword'
      @_hash
    end

    # An array for optional fields
    def optionals
      %w[
        status
        redirect_url
        redirect_fallback_url
        redirect_method
        redirect_fallback_method
        username
        password
        fallback_username
        fallback_password
      ]
    end

    # An array for nullable fields
    def nullables
      %w[
        redirect_url
        redirect_fallback_url
        redirect_method
        redirect_fallback_method
        username
        password
        fallback_username
        fallback_password
      ]
    end

    def initialize(status = nil,
                   redirect_url = nil,
                   redirect_fallback_url = nil,
                   redirect_method = nil,
                   redirect_fallback_method = nil,
                   username = nil,
                   password = nil,
                   fallback_username = nil,
                   fallback_password = nil)
      @status = status unless status == SKIP
      @redirect_url = redirect_url unless redirect_url == SKIP
      @redirect_fallback_url = redirect_fallback_url unless redirect_fallback_url == SKIP
      @redirect_method = redirect_method unless redirect_method == SKIP
      @redirect_fallback_method = redirect_fallback_method unless redirect_fallback_method == SKIP
      @username = username unless username == SKIP
      @password = password unless password == SKIP
      @fallback_username = fallback_username unless fallback_username == SKIP
      @fallback_password = fallback_password unless fallback_password == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      status = hash.key?('status') ? hash['status'] : SKIP
      redirect_url = hash.key?('redirectUrl') ? hash['redirectUrl'] : SKIP
      redirect_fallback_url =
        hash.key?('redirectFallbackUrl') ? hash['redirectFallbackUrl'] : SKIP
      redirect_method =
        hash.key?('redirectMethod') ? hash['redirectMethod'] : SKIP
      redirect_fallback_method =
        hash.key?('redirectFallbackMethod') ? hash['redirectFallbackMethod'] : SKIP
      username = hash.key?('username') ? hash['username'] : SKIP
      password = hash.key?('password') ? hash['password'] : SKIP
      fallback_username =
        hash.key?('fallbackUsername') ? hash['fallbackUsername'] : SKIP
      fallback_password =
        hash.key?('fallbackPassword') ? hash['fallbackPassword'] : SKIP

      # Create object from extracted values.
      ModifyConferenceRequest.new(status,
                                  redirect_url,
                                  redirect_fallback_url,
                                  redirect_method,
                                  redirect_fallback_method,
                                  username,
                                  password,
                                  fallback_username,
                                  fallback_password)
    end
  end
end
