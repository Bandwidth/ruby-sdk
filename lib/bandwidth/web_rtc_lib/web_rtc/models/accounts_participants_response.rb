# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # AccountsParticipantsResponse Model.
  class AccountsParticipantsResponse < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # A participant object
    # @return [Participant]
    attr_accessor :participant

    # Auth token for the returned participant
    # This should be passed to the participant so that they can connect to the
    # platform
    # @return [String]
    attr_accessor :token

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['participant'] = 'participant'
      @_hash['token'] = 'token'
      @_hash
    end

    # An array for optional fields
    def optionals
      %w[
        participant
        token
      ]
    end

    # An array for nullable fields
    def nullables
      []
    end

    def initialize(participant = nil,
                   token = nil)
      @participant = participant unless participant == SKIP
      @token = token unless token == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      participant = Participant.from_hash(hash['participant']) if hash['participant']
      token = hash.key?('token') ? hash['token'] : SKIP

      # Create object from extracted values.
      AccountsParticipantsResponse.new(participant,
                                       token)
    end
  end
end
