# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # TwoFactorCodeRequestSchema Model.
  class TwoFactorCodeRequestSchema < BaseModel
    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :to

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :from

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :application_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :scope

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['to'] = 'to'
      @_hash['from'] = 'from'
      @_hash['application_id'] = 'applicationId'
      @_hash['scope'] = 'scope'
      @_hash
    end

    def initialize(to = nil,
                   from = nil,
                   application_id = nil,
                   scope = nil)
      @to = to
      @from = from
      @application_id = application_id
      @scope = scope
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      to = hash['to']
      from = hash['from']
      application_id = hash['applicationId']
      scope = hash['scope']

      # Create object from extracted values.
      TwoFactorCodeRequestSchema.new(to,
                                     from,
                                     application_id,
                                     scope)
    end
  end
end
