# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # BandwidthMessageItem Model.
  class BandwidthMessageItem < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The message id
    # @return [String]
    attr_accessor :message_id

    # The account id of the message
    # @return [String]
    attr_accessor :account_id

    # The source phone number of the message
    # @return [String]
    attr_accessor :source_tn

    # The recipient phone number of the message
    # @return [String]
    attr_accessor :destination_tn

    # The status of the message
    # @return [String]
    attr_accessor :message_status

    # The direction of the message relative to Bandwidth. INBOUND or OUTBOUND
    # @return [String]
    attr_accessor :message_direction

    # The type of message. sms or mms
    # @return [String]
    attr_accessor :message_type

    # The number of segments the message was sent as
    # @return [Integer]
    attr_accessor :segment_count

    # The numeric error code of the message
    # @return [Integer]
    attr_accessor :error_code

    # The ISO 8601 datetime of the message
    # @return [String]
    attr_accessor :receive_time

    # The name of the carrier. Not currently supported for MMS, coming soon
    # @return [String]
    attr_accessor :carrier_name

    # The size of the message including message content and headers
    # @return [Integer]
    attr_accessor :message_size

    # The length of the message content
    # @return [Integer]
    attr_accessor :message_length

    # The number of attachments the message has
    # @return [Integer]
    attr_accessor :attachment_count

    # The number of recipients the message has
    # @return [Integer]
    attr_accessor :recipient_count

    # The campaign class of the message, if it has one
    # @return [String]
    attr_accessor :campaign_class

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['message_id'] = 'messageId'
      @_hash['account_id'] = 'accountId'
      @_hash['source_tn'] = 'sourceTn'
      @_hash['destination_tn'] = 'destinationTn'
      @_hash['message_status'] = 'messageStatus'
      @_hash['message_direction'] = 'messageDirection'
      @_hash['message_type'] = 'messageType'
      @_hash['segment_count'] = 'segmentCount'
      @_hash['error_code'] = 'errorCode'
      @_hash['receive_time'] = 'receiveTime'
      @_hash['carrier_name'] = 'carrierName'
      @_hash['message_size'] = 'messageSize'
      @_hash['message_length'] = 'messageLength'
      @_hash['attachment_count'] = 'attachmentCount'
      @_hash['recipient_count'] = 'recipientCount'
      @_hash['campaign_class'] = 'campaignClass'
      @_hash
    end

    # An array for optional fields
    def optionals
      %w[
        message_id
        account_id
        source_tn
        destination_tn
        message_status
        message_direction
        message_type
        segment_count
        error_code
        receive_time
        carrier_name
        message_size
        message_length
        attachment_count
        recipient_count
        campaign_class
      ]
    end

    # An array for nullable fields
    def nullables
      []
    end

    def initialize(message_id = nil,
                   account_id = nil,
                   source_tn = nil,
                   destination_tn = nil,
                   message_status = nil,
                   message_direction = nil,
                   message_type = nil,
                   segment_count = nil,
                   error_code = nil,
                   receive_time = nil,
                   carrier_name = nil,
                   message_size = nil,
                   message_length = nil,
                   attachment_count = nil,
                   recipient_count = nil,
                   campaign_class = nil)
      @message_id = message_id unless message_id == SKIP
      @account_id = account_id unless account_id == SKIP
      @source_tn = source_tn unless source_tn == SKIP
      @destination_tn = destination_tn unless destination_tn == SKIP
      @message_status = message_status unless message_status == SKIP
      @message_direction = message_direction unless message_direction == SKIP
      @message_type = message_type unless message_type == SKIP
      @segment_count = segment_count unless segment_count == SKIP
      @error_code = error_code unless error_code == SKIP
      @receive_time = receive_time unless receive_time == SKIP
      @carrier_name = carrier_name unless carrier_name == SKIP
      @message_size = message_size unless message_size == SKIP
      @message_length = message_length unless message_length == SKIP
      @attachment_count = attachment_count unless attachment_count == SKIP
      @recipient_count = recipient_count unless recipient_count == SKIP
      @campaign_class = campaign_class unless campaign_class == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      message_id = hash.key?('messageId') ? hash['messageId'] : SKIP
      account_id = hash.key?('accountId') ? hash['accountId'] : SKIP
      source_tn = hash.key?('sourceTn') ? hash['sourceTn'] : SKIP
      destination_tn = hash.key?('destinationTn') ? hash['destinationTn'] : SKIP
      message_status = hash.key?('messageStatus') ? hash['messageStatus'] : SKIP
      message_direction =
        hash.key?('messageDirection') ? hash['messageDirection'] : SKIP
      message_type = hash.key?('messageType') ? hash['messageType'] : SKIP
      segment_count = hash.key?('segmentCount') ? hash['segmentCount'] : SKIP
      error_code = hash.key?('errorCode') ? hash['errorCode'] : SKIP
      receive_time = hash.key?('receiveTime') ? hash['receiveTime'] : SKIP
      carrier_name = hash.key?('carrierName') ? hash['carrierName'] : SKIP
      message_size = hash.key?('messageSize') ? hash['messageSize'] : SKIP
      message_length = hash.key?('messageLength') ? hash['messageLength'] : SKIP
      attachment_count =
        hash.key?('attachmentCount') ? hash['attachmentCount'] : SKIP
      recipient_count =
        hash.key?('recipientCount') ? hash['recipientCount'] : SKIP
      campaign_class = hash.key?('campaignClass') ? hash['campaignClass'] : SKIP

      # Create object from extracted values.
      BandwidthMessageItem.new(message_id,
                               account_id,
                               source_tn,
                               destination_tn,
                               message_status,
                               message_direction,
                               message_type,
                               segment_count,
                               error_code,
                               receive_time,
                               carrier_name,
                               message_size,
                               message_length,
                               attachment_count,
                               recipient_count,
                               campaign_class)
    end
  end
end
