# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # BandwidthMessage Model.
  class BandwidthMessage < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The id of the message
    # @return [String]
    attr_accessor :id

    # The Bandwidth phone number associated with the message
    # @return [String]
    attr_accessor :owner

    # The application ID associated with the message
    # @return [String]
    attr_accessor :application_id

    # The datetime stamp of the message in ISO 8601
    # @return [String]
    attr_accessor :time

    # The number of segments the original message from the user is broken into
    # before sending over to carrier networks
    # @return [Integer]
    attr_accessor :segment_count

    # The direction of the message relative to Bandwidth. Can be in or out
    # @return [String]
    attr_accessor :direction

    # The phone number recipients of the message
    # @return [List of String]
    attr_accessor :to

    # The phone number the message was sent from
    # @return [String]
    attr_accessor :from

    # The list of media URLs sent in the message. Including a `filename` field
    # in the `Content-Disposition` header of the media linked with a URL will
    # set the displayed file name. This is a best practice to ensure that your
    # media has a readable file name.
    # @return [List of String]
    attr_accessor :media

    # The contents of the message
    # @return [String]
    attr_accessor :text

    # The custom string set by the user
    # @return [String]
    attr_accessor :tag

    # The priority specified by the user
    # @return [String]
    attr_accessor :priority

    # A string with the date/time value that the message will automatically expire by.
    # @return [String]
    attr_accessor :expiration

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['id'] = 'id'
      @_hash['owner'] = 'owner'
      @_hash['application_id'] = 'applicationId'
      @_hash['time'] = 'time'
      @_hash['segment_count'] = 'segmentCount'
      @_hash['direction'] = 'direction'
      @_hash['to'] = 'to'
      @_hash['from'] = 'from'
      @_hash['media'] = 'media'
      @_hash['text'] = 'text'
      @_hash['tag'] = 'tag'
      @_hash['priority'] = 'priority'
      @_hash['expiration'] = 'expiration'
      @_hash
    end

    # An array for optional fields
    def optionals
      %w[
        id
        owner
        application_id
        time
        segment_count
        direction
        to
        from
        media
        text
        tag
        priority
        expiration
      ]
    end

    # An array for nullable fields
    def nullables
      []
    end

    def initialize(id = nil,
                   owner = nil,
                   application_id = nil,
                   time = nil,
                   segment_count = nil,
                   direction = nil,
                   to = nil,
                   from = nil,
                   media = nil,
                   text = nil,
                   tag = nil,
                   priority = nil,
                   expiration = nil)
      @id = id unless id == SKIP
      @owner = owner unless owner == SKIP
      @application_id = application_id unless application_id == SKIP
      @time = time unless time == SKIP
      @segment_count = segment_count unless segment_count == SKIP
      @direction = direction unless direction == SKIP
      @to = to unless to == SKIP
      @from = from unless from == SKIP
      @media = media unless media == SKIP
      @text = text unless text == SKIP
      @tag = tag unless tag == SKIP
      @priority = priority unless priority == SKIP
      @expiration = expiration unless expiration == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      id = hash.key?('id') ? hash['id'] : SKIP
      owner = hash.key?('owner') ? hash['owner'] : SKIP
      application_id = hash.key?('applicationId') ? hash['applicationId'] : SKIP
      time = hash.key?('time') ? hash['time'] : SKIP
      segment_count = hash.key?('segmentCount') ? hash['segmentCount'] : SKIP
      direction = hash.key?('direction') ? hash['direction'] : SKIP
      to = hash.key?('to') ? hash['to'] : SKIP
      from = hash.key?('from') ? hash['from'] : SKIP
      media = hash.key?('media') ? hash['media'] : SKIP
      text = hash.key?('text') ? hash['text'] : SKIP
      tag = hash.key?('tag') ? hash['tag'] : SKIP
      priority = hash.key?('priority') ? hash['priority'] : SKIP
      expiration = hash.key?('expiration') ? hash['expiration'] : SKIP

      # Create object from extracted values.
      BandwidthMessage.new(id,
                           owner,
                           application_id,
                           time,
                           segment_count,
                           direction,
                           to,
                           from,
                           media,
                           text,
                           tag,
                           priority,
                           expiration)
    end
  end
end
