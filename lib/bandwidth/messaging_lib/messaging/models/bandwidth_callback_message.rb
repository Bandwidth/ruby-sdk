# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # BandwidthCallbackMessage Model.
  class BandwidthCallbackMessage < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :time

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :type

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :to

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :error_code

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :description

    # TODO: Write general description for this method
    # @return [BandwidthMessage]
    attr_accessor :message

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['time'] = 'time'
      @_hash['type'] = 'type'
      @_hash['to'] = 'to'
      @_hash['error_code'] = 'errorCode'
      @_hash['description'] = 'description'
      @_hash['message'] = 'message'
      @_hash
    end

    # An array for optional fields
    def optionals
      %w[
        time
        type
        to
        error_code
        description
        message
      ]
    end

    # An array for nullable fields
    def nullables
      []
    end

    def initialize(time = nil,
                   type = nil,
                   to = nil,
                   error_code = nil,
                   description = nil,
                   message = nil)
      @time = time unless time == SKIP
      @type = type unless type == SKIP
      @to = to unless to == SKIP
      @error_code = error_code unless error_code == SKIP
      @description = description unless description == SKIP
      @message = message unless message == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      time = hash.key?('time') ? hash['time'] : SKIP
      type = hash.key?('type') ? hash['type'] : SKIP
      to = hash.key?('to') ? hash['to'] : SKIP
      error_code = hash.key?('errorCode') ? hash['errorCode'] : SKIP
      description = hash.key?('description') ? hash['description'] : SKIP
      message = BandwidthMessage.from_hash(hash['message']) if hash['message']

      # Create object from extracted values.
      BandwidthCallbackMessage.new(time,
                                   type,
                                   to,
                                   error_code,
                                   description,
                                   message)
    end
  end
end
