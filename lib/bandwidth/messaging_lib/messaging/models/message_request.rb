# bandwidth
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Bandwidth
  # MessageRequest Model.
  class MessageRequest < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The ID of the Application your from number is associated with in the
    # Bandwidth Phone Number Dashboard.
    # @return [String]
    attr_accessor :application_id

    # The phone number(s) the message should be sent to in E164 format
    # @return [List of String]
    attr_accessor :to

    # One of your telephone numbers the message should come from in E164 format
    # @return [String]
    attr_accessor :from

    # The contents of the text message. Must be 2048 characters or less.
    # @return [String]
    attr_accessor :text

    # A list of URLs to include as media attachments as part of the message.
    # @return [List of String]
    attr_accessor :media

    # A custom string that will be included in callback events of the message.
    # Max 1024 characters
    # @return [String]
    attr_accessor :tag

    # The message's priority, currently for toll-free or short code SMS only.
    # Messages with a priority value of `"high"` are given preference over your
    # other traffic.
    # @return [PriorityEnum]
    attr_accessor :priority

    # A string with the date/time value that the message will automatically expire by.
    # This must be a valid RFC-3339 value, e.g., 2021-03-14T01:59:26Z or 2021-03-13T20:59:26-05:00.
    # @return [String]
    attr_accessor :expiration

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['application_id'] = 'applicationId'
      @_hash['to'] = 'to'
      @_hash['from'] = 'from'
      @_hash['text'] = 'text'
      @_hash['media'] = 'media'
      @_hash['tag'] = 'tag'
      @_hash['priority'] = 'priority'
      @_hash['expiration'] = 'expiration'
      @_hash
    end

    # An array for optional fields
    def optionals
      %w[
        text
        media
        tag
        priority
        expiration
      ]
    end

    # An array for nullable fields
    def nullables
      []
    end

    def initialize(application_id = nil,
                   to = nil,
                   from = nil,
                   text = nil,
                   media = nil,
                   tag = nil,
                   priority = nil,
                   expiration = nil)
      @application_id = application_id unless application_id == SKIP
      @to = to unless to == SKIP
      @from = from unless from == SKIP
      @text = text unless text == SKIP
      @media = media unless media == SKIP
      @tag = tag unless tag == SKIP
      @priority = priority unless priority == SKIP
      @expiration = expiration unless expiration == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      application_id = hash.key?('applicationId') ? hash['applicationId'] : SKIP
      to = hash.key?('to') ? hash['to'] : SKIP
      from = hash.key?('from') ? hash['from'] : SKIP
      text = hash.key?('text') ? hash['text'] : SKIP
      media = hash.key?('media') ? hash['media'] : SKIP
      tag = hash.key?('tag') ? hash['tag'] : SKIP
      priority = hash.key?('priority') ? hash['priority'] : SKIP
      expiration = hash.key?('expiration') ? hash['expiration'] : SKIP

      # Create object from extracted values.
      MessageRequest.new(application_id,
                         to,
                         from,
                         text,
                         media,
                         tag,
                         priority,
                         expiration)
    end
  end
end
